1. 数据结构是一门研究非数值计算的程序设计问题中的操作对象,以及他们之间的关系和操作等相关的问题的学科.

2. 数据: 可以输入到计算机中, 能被计算机程序处理

3. 一个数据元素由若干个数据项组成,数据项是数据不可分割的最小单位.

4. 数据结构: 是相互之间存在一种或多种特定关系的数据元素的集合.

5. 逻辑结构: 是指数据对象中数据元素之间的相互关系. 逻辑结构是针对具体问题的,是为了解决某个问题,在对问题理解的基础上,
   选择一个和食的数据结构标识数据元素之间的逻辑关系.

6. 物理结构: 是指数据的罗辑结构在计算机中的存储形式.数据是数据元素的集合,那么根据物理结构的定义,
   实际上就是如何把数据元素存储到计算机的存储器中.存储器主要是针对内存而言的,像硬盘,软盘,光盘等外部存储器的数据组织通常用文件结构来描述.

7. 逻辑结构是面向问题的,而物理结构是面向计算机的,其基本目标就是将数据及其逻辑关系存储到计算机的内存中.

8. 链式存储结构:把数据放在任意的存储单元,这组存储单元可以是连续的,也可以是任意的.数据元素的存储关系并不能反应罗辑关系.

9. 数据类型: 一组性质相同的值的集合以及定义在此集合上的操作的总称. 抽象是指抽取出事物具有的普遍性的本质.

10. 抽象数据类型: 是指一个数学模型以及定义在该模型上的操作.一个抽象数据类型定义了一个数据对象,数据对象中各元素之间的关系及对数据元素的操作.

11. 抽象数据类型体现了程序设计中的问题分解,抽象和信息隐藏的特性.

12. 算法是解决特定问题求解的步骤的描述,在计算机中表示为指令的有限序列,并且每个指令表示一个或多个操作.

13. 算法是描述解决问题的方法.为了解决某个或某类问题,需要把指令表示为一定的操作序列,操作序列包括一组操作,每一个操作都完成特定的功能.

14. 算法具有五个基本特性:
    * 输入
    * 输出
    * 有穷性 算法在执行有限的步骤之后,自动结束而不会出现无限循环,并且每一个步骤在可接受的时间内完成.
    * 确定性 算法的每一步骤都具有确定的含义,不会出现二义性.
    * 可行性 算法的每一步都必须是可行的.

15. 算法设计的要求
    * 正确性
    * 可读性
    * 健壮性 数据输入不合法时,算法也能够作出相关处理,而不是产生异常或莫名其妙的错误.
    * 时间效率高和存储量低

16. 算法效率的度量方法
    * 事后统计的方法
    * 事前分析归纳法 在计算机程序编制前,依据统计方法对算法进行估算.

17. 程序消耗时间因素:
    * 算法采用的策略,方法
    * 编译产生的代码质量
    * 问题的输入规模
    * 机器执行指令的速度

18. 一个程序的运行时间,依赖于算法的好坏和问题的输入规模.

19. 测定运行时间最可靠的方法就是计算运行时间有消耗的基本操作的执行次数.运行时间与这个计数成正比. 在分析程序运行时间时,
    最重要的是把程序看成是独立于程序设计语言的算法或一系列步骤.把基本操作的数量与输入规模关联起来.

20. 在输入规模n 没有限制的情况下,只要超过一个数值N, 这个函数就总是大于另一个函数,我们称函数是渐近增长的.

21. 判断一个算法效率时,函数的常熟和其他次要项常常可以忽略,而更应该关注主项(最高阶项).

22. 通过算法的时间复杂度来估算算法的时间效率.

23. 算法时间复杂度定义:T(n) = O(f(n)). 一般情况下,随着n 的增大, T(n)增长的最慢的算法为最优算法.

24. 循环的时间复杂度等于循环体的复杂度乘以该循环运行的次数.

25. 最坏情况与平均情况:平均运行时间是所有情况中最有意义的,因为它是期望的运行时间. 一般在美柚特殊说明的情况下,都是指最坏时间复杂度.

26. 计算算法分析工具,改进代码的时间复杂度.

27. 线性表:零个或多个数据元素的有限序列.在复杂的线性表中,一个数据元素可以由若干个数据项组成.

28. 存储器中的每个存储单元都有自己的编号,这个编号称为地址.线性表的元素位置是可以计算的,因此线性表的存取时间是O(1).

29. 非数值计算问题的数学模型不再是数学方程。

30. 抽象数据类型一般指由用户定义的、表示应用问题的数学模型，以及定义在这个模型上的一组操作的宗臣，具体包括三部分：
    数据对象、数据对象上关系的集合以及数据对象的基本操作的集合。

31.  